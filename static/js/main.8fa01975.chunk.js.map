{"version":3,"sources":["components/ContatctList/ContactList.module.scss","components/ContactForm/ContactForm.module.scss","components/FilterContact/FilterContact.module.scss","components/Loader/Loader.module.css","components/Container/Container.module.scss","redux/operations.js","components/ContactForm/ContactForm.js","redux/selectors.js","components/Loader/Loader.js","components/ContatctList/ContactList.js","redux/actions.js","components/FilterContact/FilterContact.js","components/Section/Section.js","components/Container/Container.js","App.js","redux/reducers.js","redux/store.js","index.js"],"names":["module","exports","axios","defaults","baseURL","fetchContact","createAsyncThunk","_","a","rejectWithValue","get","then","data","addContact","contact","post","deleteContact","id","delete","ContactForm","dispatch","useDispatch","items","useSelector","state","contacts","useState","name","setName","number","setNumber","handleChange","e","currentTarget","value","Error","reset","className","s","form","onSubmit","preventDefault","find","item","alert","form__input","onChange","type","pattern","title","required","placeholder","btn","getLoading","loading","getVisibleContacts","createSelector","filter","normalizedFilter","toLowerCase","includes","LoaderComponent","loader","color","height","width","timeout","Contacts","visibleContacts","useEffect","filterList","map","filterListItem","text","span","onClick","filterContact","createAction","FilterContact","label","filterInput","target","Section","children","Container","container","App","ContactList","createReducer","fulfilled","payload","pending","rejected","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","contactReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8fa01975.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterList\":\"ContactList_filterList__1qkhy\",\"filterListItem\":\"ContactList_filterListItem__L1Kni\",\"text\":\"ContactList_text__3NVM0\",\"span\":\"ContactList_span__OFfS8\",\"btn\":\"ContactList_btn__2Zk22\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1wG2l\",\"form__input\":\"ContactForm_form__input__2P8dm\",\"btn\":\"ContactForm_btn__2YxzE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"FilterContact_label__15kYF\",\"filterInput\":\"FilterContact_filterInput__19uYQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__1jzt9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1E881\"};","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://6192d0a1d3ae6d0017da82d2.mockapi.io';\r\n\r\nexport const fetchContact = createAsyncThunk(\r\n  'contacts/fetchContact',\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      return await axios.get('/contacts').then(({ data }) => data);\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n\r\nexport const addContact = createAsyncThunk(\r\n  'contacts/addContact',\r\n  async (contact, { rejectWithValue }) => {\r\n    try {\r\n      return await axios.post('/contacts', contact).then(({ data }) => data);\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n\r\nexport const deleteContact = createAsyncThunk(\r\n  'contacts/deleteContact',\r\n  async (id, { rejectWithValue }) => {\r\n    try {\r\n      await axios.delete(`/contacts/${id}`);\r\n      return id;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n","import { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addContact } from '../../redux/operations';\r\nimport s from './ContactForm.module.scss';\r\n\r\nfunction ContactForm() {\r\n  const dispatch = useDispatch();\r\n  const { items } = useSelector(state => state.contacts);\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleChange = e => {\r\n    const value = e.currentTarget.name;\r\n    switch (value) {\r\n      case 'name':\r\n        setName(e.currentTarget.value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(e.currentTarget.value);\r\n        break;\r\n\r\n      default:\r\n        throw new Error();\r\n    }\r\n  };\r\n  const onSubmitForm = e => {\r\n    e.preventDefault();\r\n    if (items.find(item => name === item.name)) {\r\n      alert(`${items.name} is already in contacts`);\r\n      reset();\r\n      return;\r\n    }\r\n    const contact = {\r\n      name,\r\n      number,\r\n    };\r\n    dispatch(addContact(contact));\r\n\r\n    reset();\r\n  };\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n  return (\r\n    <form className={s.form} onSubmit={onSubmitForm}>\r\n      <label>\r\n        Name\r\n        <input\r\n          className={s.form__input}\r\n          onChange={handleChange}\r\n          value={name}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          placeholder=\"\"\r\n        />\r\n      </label>\r\n      <label>\r\n        Number\r\n        <input\r\n          className={s.form__input}\r\n          onChange={handleChange}\r\n          value={number}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          placeholder=\"\"\r\n        />\r\n      </label>\r\n      <button className={s.btn}>add contact</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ContactForm;\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const getContacts = state => state.contacts.items;\r\nexport const getLoading = state => state.contacts.loading;\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getVisibleContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  }\r\n);\r\n","import Loader from \"react-loader-spinner\";\r\nimport s from \"./Loader.module.css\";\r\n\r\nexport default function LoaderComponent() {\r\n  return (\r\n    <Loader\r\n      className={s.loader}\r\n      type=\"Grid\"\r\n      color=\"black\"\r\n      height={80}\r\n      width={80}\r\n      timeout={4000}\r\n    />\r\n  );\r\n}\r\n","import s from './ContactList.module.scss';\r\nimport { useSelector } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport { deleteContact, fetchContact } from '../../redux/operations';\r\nimport { getLoading, getVisibleContacts } from '../../redux/selectors';\r\nimport Loader from '../Loader';\r\n\r\nconst Contacts = () => {\r\n  const dispatch = useDispatch();\r\n  const visibleContacts = useSelector(getVisibleContacts);\r\n  const loading = useSelector(getLoading);\r\n  useEffect(() => dispatch(fetchContact()), [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <ul className={s.filterList}>\r\n          {visibleContacts.map(({ id, number, name }) => (\r\n            <li className={s.filterListItem} key={id}>\r\n              <p className={s.text}>\r\n                {name}: <span className={s.span}>{number}</span>\r\n              </p>\r\n\r\n              <button\r\n                className={s.btn}\r\n                onClick={() => dispatch(deleteContact(id))}\r\n                type=\"button\"\r\n              >\r\n                delete\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Contacts;\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const filterContact = createAction('contact/filter');\r\n","import s from \"./FilterContact.module.scss\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { filterContact } from \"../../redux/actions\";\r\n\r\nconst FilterContact = () => {\r\n  const value = useSelector(state => state.contacts.filter);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <label className={s.label}>\r\n      Find contacts by name\r\n      <input\r\n        className={s.filterInput}\r\n        onChange={e => dispatch(filterContact(e.target.value))}\r\n        value={value}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default FilterContact;\r\n","const Section = ({ title, children }) => {\r\n  return (\r\n    <section>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n","import s from './Container.module.scss';\r\nimport React from 'react';\r\n\r\nconst Container = ({ children }) => {\r\n  return <div className={s.container}>{children}</div>;\r\n};\r\n\r\nexport default Container;\r\n","import ContactForm from \"./components/ContactForm\";\r\nimport ContactList from \"./components/ContatctList\";\r\nimport FilterContact from \"./components/FilterContact\";\r\nimport Section from \"./components/Section\";\r\nimport Container from \"./components/Container\";\r\nimport \"modern-normalize/modern-normalize.css\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <Container className=\"App\">\r\n      <Section title=\"Phonebook\">\r\n        <ContactForm />\r\n      </Section>\r\n      <Section title=\"Contacts\">\r\n        <FilterContact />\r\n        <ContactList />\r\n      </Section>\r\n    </Container>\r\n  );\r\n}\r\n","import { combineReducers, createReducer } from '@reduxjs/toolkit';\r\nimport { filterContact } from './actions';\r\nimport { fetchContact, addContact, deleteContact } from './operations';\r\n\r\nconst items = createReducer([], {\r\n  [fetchContact.fulfilled]: (_, { payload }) => payload,\r\n  [addContact.fulfilled]: (state, { payload }) => [...state, payload],\r\n  [deleteContact.fulfilled]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [filterContact]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContact.pending]: () => true,\r\n  [fetchContact.fulfilled]: () => false,\r\n  [fetchContact.rejected]: () => false,\r\n\r\n  [addContact.pending]: () => true,\r\n  [addContact.fulfilled]: () => false,\r\n  [addContact.rejected]: () => false,\r\n\r\n  [deleteContact.pending]: () => true,\r\n  [deleteContact.fulfilled]: () => false,\r\n  [deleteContact.rejected]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport contactReducer from \"./reducers\";\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\n// import { PersistGate } from \"redux-persist/integration/react\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      {/* <PersistGate loading={\"loading....\"} persistor={persistor}> */}\r\n      <App />\r\n      {/* </PersistGate> */}\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}